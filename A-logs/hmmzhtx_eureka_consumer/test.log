[2019-08-13 18:52:20:628] [@project.artifactId@,,,,] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:652) - No active profile set, falling back to default profiles: default
[2019-08-13 18:52:23:743] [@project.artifactId@,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing ProtocolHandler ["http-nio-3001"]
[2019-08-13 18:52:23:757] [@project.artifactId@,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting service [Tomcat]
[2019-08-13 18:52:23:759] [@project.artifactId@,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting Servlet Engine: Apache Tomcat/8.5.28
[2019-08-13 18:52:23:766] [@project.artifactId@,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;"C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\Program Files (x86)\Java\jdk1.8.0_131\jre\bin;";C:\Program Files\Git\cmd;C:\Program Files\PuTTY\;C:\Program ming\Anaconda3;C:\Program ming\Anaconda3\Library\mingw-w64\bin;C:\Program ming\Anaconda3\Library\usr\bin;C:\Program ming\Anaconda3\Library\bin;C:\Program ming\Anaconda3\Scripts;C:\Users\huangmingming\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\SSH Communications Security\SSH Secure Shell;C:\Users\huangmingming\AppData\Local\GitHubDesktop\bin;C:\Python27;C:\Python27\Scripts\scrapy.exe;C:\Program ming\zookeeper-3.4.12\bin;C:\Program ming\Microsoft VS Code\bin;.]
[2019-08-13 18:52:23:921] [@project.artifactId@,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing Spring embedded WebApplicationContext
[2019-08-13 18:52:25:728] [@project.artifactId@,,,,] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[2019-08-13 18:52:25:728] [@project.artifactId@,,,,] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-13 18:52:25:734] [@project.artifactId@,,,,] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[2019-08-13 18:52:25:734] [@project.artifactId@,,,,] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-13 18:52:28:487] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[2019-08-13 18:52:28:926] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[2019-08-13 18:52:28:927] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[2019-08-13 18:52:29:134] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[2019-08-13 18:52:29:134] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[2019-08-13 18:52:29:465] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-13 18:52:29:640] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[2019-08-13 18:52:29:640] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[2019-08-13 18:52:29:641] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[2019-08-13 18:52:29:641] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[2019-08-13 18:52:29:642] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[2019-08-13 18:52:29:643] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[2019-08-13 18:52:29:643] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[2019-08-13 18:52:29:965] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[2019-08-13 18:52:29:971] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264) - Starting heartbeat executor: renew interval is: 30
[2019-08-13 18:52:29:976] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-13 18:52:29:982] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1565693549980 with initial instances count: 1
[2019-08-13 18:52:30:008] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1299) - Saw local status change event StatusChangeEvent [timestamp=1565693550008, current=UP, previous=STARTING]
[2019-08-13 18:52:30:011] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_EUREKA-CONSUMER-FEIGN/SH-NC-0025.zzss.local:eureka-consumer-feign:3001: registering service...
[2019-08-13 18:52:30:055] [@project.artifactId@,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting ProtocolHandler ["http-nio-3001"]
[2019-08-13 18:52:30:069] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_EUREKA-CONSUMER-FEIGN/SH-NC-0025.zzss.local:eureka-consumer-feign:3001 - registration status: 204
[2019-08-13 18:52:30:071] [@project.artifactId@,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Using a shared selector for servlet write/read
[2019-08-13 18:52:30:111] [@project.artifactId@,,,,] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started EurekaConsumerFeignApplication in 11.411 seconds (JVM running for 13.089)
[2019-08-13 18:53:00:683] [@project.artifactId@,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing Spring FrameworkServlet 'dispatcherServlet'
[2019-08-13 18:53:00:960] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-13 18:53:00:962] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-13 18:53:00:962] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-13 18:53:00:963] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-13 18:53:00:970] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-13 18:53:00:971] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-13 18:53:01:763] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: eureka-client.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2019-08-13 18:53:01:845] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-client
[2019-08-13 18:53:01:894] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:192) - Client: eureka-client instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-client,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2019-08-13 18:53:01:905] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
[2019-08-13 18:53:01:956] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: eureka-client.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2019-08-13 18:53:01:962] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client eureka-client initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-client,current list of Servers=[SH-NC-0025.zzss.local:2001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:SH-NC-0025.zzss.local:2001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@625e3c
[2019-08-13 18:53:02:671] [@project.artifactId@,af1a36b15be2eedd,af1a36b15be2eedd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-13 18:53:02:912] [@project.artifactId@,,,,] [INFO] - com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: eureka-client.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2019-08-13 18:55:54:621] [@project.artifactId@,9276aef6916ce3c8,9276aef6916ce3c8,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-13 18:55:54:623] [@project.artifactId@,9276aef6916ce3c8,9276aef6916ce3c8,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-13 18:55:54:623] [@project.artifactId@,9276aef6916ce3c8,9276aef6916ce3c8,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-13 18:55:54:624] [@project.artifactId@,9276aef6916ce3c8,9276aef6916ce3c8,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-13 18:55:54:625] [@project.artifactId@,9276aef6916ce3c8,9276aef6916ce3c8,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-13 18:55:54:626] [@project.artifactId@,9276aef6916ce3c8,9276aef6916ce3c8,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-13 18:55:54:920] [@project.artifactId@,9276aef6916ce3c8,9276aef6916ce3c8,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-13 18:56:48:034] [@project.artifactId@,263b7b89818d7e6a,263b7b89818d7e6a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-13 18:56:48:036] [@project.artifactId@,263b7b89818d7e6a,263b7b89818d7e6a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-13 18:56:48:037] [@project.artifactId@,263b7b89818d7e6a,263b7b89818d7e6a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-13 18:56:48:038] [@project.artifactId@,263b7b89818d7e6a,263b7b89818d7e6a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-13 18:56:48:039] [@project.artifactId@,263b7b89818d7e6a,263b7b89818d7e6a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-13 18:56:48:039] [@project.artifactId@,263b7b89818d7e6a,263b7b89818d7e6a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-13 18:56:48:056] [@project.artifactId@,263b7b89818d7e6a,263b7b89818d7e6a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-13 18:57:29:654] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-13 19:01:28:242] [@project.artifactId@,af736659f4148d1f,af736659f4148d1f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-13 19:01:28:243] [@project.artifactId@,af736659f4148d1f,af736659f4148d1f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-13 19:01:28:244] [@project.artifactId@,af736659f4148d1f,af736659f4148d1f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-13 19:01:28:244] [@project.artifactId@,af736659f4148d1f,af736659f4148d1f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-13 19:01:28:245] [@project.artifactId@,af736659f4148d1f,af736659f4148d1f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-13 19:01:28:246] [@project.artifactId@,af736659f4148d1f,af736659f4148d1f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-13 19:01:28:566] [@project.artifactId@,af736659f4148d1f,af736659f4148d1f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-13 19:02:21:464] [@project.artifactId@,beac4c43abdb94f6,beac4c43abdb94f6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-13 19:02:21:466] [@project.artifactId@,beac4c43abdb94f6,beac4c43abdb94f6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-13 19:02:21:466] [@project.artifactId@,beac4c43abdb94f6,beac4c43abdb94f6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-13 19:02:21:467] [@project.artifactId@,beac4c43abdb94f6,beac4c43abdb94f6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-13 19:02:21:468] [@project.artifactId@,beac4c43abdb94f6,beac4c43abdb94f6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-13 19:02:21:468] [@project.artifactId@,beac4c43abdb94f6,beac4c43abdb94f6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-13 19:02:21:732] [@project.artifactId@,beac4c43abdb94f6,beac4c43abdb94f6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-13 19:02:22:535] [@project.artifactId@,905771e10d62a514,905771e10d62a514,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-13 19:02:22:536] [@project.artifactId@,905771e10d62a514,905771e10d62a514,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-13 19:02:22:537] [@project.artifactId@,905771e10d62a514,905771e10d62a514,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-13 19:02:22:538] [@project.artifactId@,905771e10d62a514,905771e10d62a514,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-13 19:02:22:538] [@project.artifactId@,905771e10d62a514,905771e10d62a514,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-13 19:02:22:539] [@project.artifactId@,905771e10d62a514,905771e10d62a514,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-13 19:02:22:550] [@project.artifactId@,905771e10d62a514,905771e10d62a514,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-13 19:02:29:662] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-13 19:07:08:630] [@project.artifactId@,29d7df51d55610a6,29d7df51d55610a6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-13 19:07:08:631] [@project.artifactId@,29d7df51d55610a6,29d7df51d55610a6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-13 19:07:08:631] [@project.artifactId@,29d7df51d55610a6,29d7df51d55610a6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-13 19:07:08:632] [@project.artifactId@,29d7df51d55610a6,29d7df51d55610a6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-13 19:07:08:633] [@project.artifactId@,29d7df51d55610a6,29d7df51d55610a6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-13 19:07:08:634] [@project.artifactId@,29d7df51d55610a6,29d7df51d55610a6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-13 19:07:08:923] [@project.artifactId@,29d7df51d55610a6,29d7df51d55610a6,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-13 19:07:29:663] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-13 19:12:29:665] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-13 19:17:29:673] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-13 19:22:29:677] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-13 19:27:29:688] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-13 19:32:29:697] [@project.artifactId@,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
