[2019-08-15 14:48:14:827]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:652) - No active profile set, falling back to default profiles: default
[2019-08-15 14:48:18:819]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing ProtocolHandler ["http-nio-3001"]
[2019-08-15 14:48:18:833]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting service [Tomcat]
[2019-08-15 14:48:18:834]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting Servlet Engine: Apache Tomcat/8.5.28
[2019-08-15 14:48:18:841]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;"C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\Program Files (x86)\Java\jdk1.8.0_131\jre\bin;";C:\Program Files\Git\cmd;C:\Program Files\PuTTY\;C:\Program ming\Anaconda3;C:\Program ming\Anaconda3\Library\mingw-w64\bin;C:\Program ming\Anaconda3\Library\usr\bin;C:\Program ming\Anaconda3\Library\bin;C:\Program ming\Anaconda3\Scripts;C:\Users\huangmingming\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\SSH Communications Security\SSH Secure Shell;C:\Users\huangmingming\AppData\Local\GitHubDesktop\bin;C:\Python27;C:\Python27\Scripts\scrapy.exe;C:\Program ming\zookeeper-3.4.12\bin;C:\Program ming\Microsoft VS Code\bin;.]
[2019-08-15 14:48:19:056]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing Spring embedded WebApplicationContext
[2019-08-15 14:48:21:087]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[2019-08-15 14:48:21:090]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-15 14:48:21:098]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[2019-08-15 14:48:21:099]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-15 14:48:24:647]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[2019-08-15 14:48:24:949]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[2019-08-15 14:48:24:950]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[2019-08-15 14:48:25:109]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[2019-08-15 14:48:25:109]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[2019-08-15 14:48:25:338]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-15 14:48:25:466]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[2019-08-15 14:48:25:467]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[2019-08-15 14:48:25:467]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[2019-08-15 14:48:25:467]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[2019-08-15 14:48:25:468]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[2019-08-15 14:48:25:468]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[2019-08-15 14:48:25:468]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[2019-08-15 14:48:25:714]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[2019-08-15 14:48:25:719]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264) - Starting heartbeat executor: renew interval is: 30
[2019-08-15 14:48:25:723]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-15 14:48:25:729]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1565851705727 with initial instances count: 1
[2019-08-15 14:48:25:749]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1299) - Saw local status change event StatusChangeEvent [timestamp=1565851705749, current=UP, previous=STARTING]
[2019-08-15 14:48:25:751]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_EUREKA-CONSUMER-FEIGN/SH-NC-0025.zzss.local:eureka-consumer-feign:3001: registering service...
[2019-08-15 14:48:25:789]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting ProtocolHandler ["http-nio-3001"]
[2019-08-15 14:48:25:798]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_EUREKA-CONSUMER-FEIGN/SH-NC-0025.zzss.local:eureka-consumer-feign:3001 - registration status: 204
[2019-08-15 14:48:25:803]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Using a shared selector for servlet write/read
[2019-08-15 14:48:25:832]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started EurekaConsumerFeignApplication in 13.173 seconds (JVM running for 15.988)
[2019-08-15 14:53:25:477]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-15 14:58:25:484]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-15 15:03:25:488]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-15 15:07:51:639]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing Spring FrameworkServlet 'dispatcherServlet'
[2019-08-15 15:07:51:781]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:07:51:782]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:07:51:783]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:07:51:784]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:07:51:787]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:07:51:788]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:07:52:286]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: eureka-client.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2019-08-15 15:07:52:343]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-client
[2019-08-15 15:07:52:399]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:192) - Client: eureka-client instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-client,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2019-08-15 15:07:52:410]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
[2019-08-15 15:07:52:448]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: eureka-client.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2019-08-15 15:07:52:452]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client eureka-client initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-client,current list of Servers=[SH-NC-0025.zzss.local:2001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:SH-NC-0025.zzss.local:2001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@15bd012
[2019-08-15 15:07:53:001]  [Spring_Cloud_Eureka_Consumer_Feign,4fbfb04c4c492a75,4fbfb04c4c492a75,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:07:53:416]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: eureka-client.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2019-08-15 15:08:16:886]  [Spring_Cloud_Eureka_Consumer_Feign,0aee9d81786616fe,0aee9d81786616fe,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:08:16:888]  [Spring_Cloud_Eureka_Consumer_Feign,0aee9d81786616fe,0aee9d81786616fe,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:08:16:889]  [Spring_Cloud_Eureka_Consumer_Feign,0aee9d81786616fe,0aee9d81786616fe,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:08:16:891]  [Spring_Cloud_Eureka_Consumer_Feign,0aee9d81786616fe,0aee9d81786616fe,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:08:16:892]  [Spring_Cloud_Eureka_Consumer_Feign,0aee9d81786616fe,0aee9d81786616fe,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:08:16:893]  [Spring_Cloud_Eureka_Consumer_Feign,0aee9d81786616fe,0aee9d81786616fe,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:08:16:913]  [Spring_Cloud_Eureka_Consumer_Feign,0aee9d81786616fe,0aee9d81786616fe,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:08:25:492]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-15 15:09:08:339]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:652) - No active profile set, falling back to default profiles: default
[2019-08-15 15:09:12:320]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing ProtocolHandler ["http-nio-3001"]
[2019-08-15 15:09:12:334]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting service [Tomcat]
[2019-08-15 15:09:12:335]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting Servlet Engine: Apache Tomcat/8.5.28
[2019-08-15 15:09:12:342]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;"C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\Program Files (x86)\Java\jdk1.8.0_131\jre\bin;";C:\Program Files\Git\cmd;C:\Program Files\PuTTY\;C:\Program ming\Anaconda3;C:\Program ming\Anaconda3\Library\mingw-w64\bin;C:\Program ming\Anaconda3\Library\usr\bin;C:\Program ming\Anaconda3\Library\bin;C:\Program ming\Anaconda3\Scripts;C:\Users\huangmingming\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\SSH Communications Security\SSH Secure Shell;C:\Users\huangmingming\AppData\Local\GitHubDesktop\bin;C:\Python27;C:\Python27\Scripts\scrapy.exe;C:\Program ming\zookeeper-3.4.12\bin;C:\Program ming\Microsoft VS Code\bin;.]
[2019-08-15 15:09:12:535]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing Spring embedded WebApplicationContext
[2019-08-15 15:09:14:791]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[2019-08-15 15:09:14:792]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-15 15:09:14:798]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[2019-08-15 15:09:14:799]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-15 15:09:19:224]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[2019-08-15 15:09:19:661]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[2019-08-15 15:09:19:665]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[2019-08-15 15:09:19:879]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[2019-08-15 15:09:19:880]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[2019-08-15 15:09:20:113]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-15 15:09:20:237]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[2019-08-15 15:09:20:238]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[2019-08-15 15:09:20:238]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[2019-08-15 15:09:20:239]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[2019-08-15 15:09:20:239]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[2019-08-15 15:09:20:240]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[2019-08-15 15:09:20:240]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[2019-08-15 15:09:20:476]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[2019-08-15 15:09:20:481]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264) - Starting heartbeat executor: renew interval is: 30
[2019-08-15 15:09:20:485]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-15 15:09:20:490]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1565852960488 with initial instances count: 2
[2019-08-15 15:09:20:520]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1299) - Saw local status change event StatusChangeEvent [timestamp=1565852960520, current=UP, previous=STARTING]
[2019-08-15 15:09:20:522]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_EUREKA-CONSUMER-FEIGN/SH-NC-0025.zzss.local:eureka-consumer-feign:3001: registering service...
[2019-08-15 15:09:20:583]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting ProtocolHandler ["http-nio-3001"]
[2019-08-15 15:09:20:588]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_EUREKA-CONSUMER-FEIGN/SH-NC-0025.zzss.local:eureka-consumer-feign:3001 - registration status: 204
[2019-08-15 15:09:20:597]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Using a shared selector for servlet write/read
[2019-08-15 15:09:20:627]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started EurekaConsumerFeignApplication in 14.316 seconds (JVM running for 15.893)
[2019-08-15 15:09:27:971]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing Spring FrameworkServlet 'dispatcherServlet'
[2019-08-15 15:09:28:099]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:09:28:100]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:09:28:100]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:09:28:100]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:09:28:102]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:09:28:103]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:09:28:539]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: eureka-client.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2019-08-15 15:09:28:719]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-client
[2019-08-15 15:09:28:749]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:192) - Client: eureka-client instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-client,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2019-08-15 15:09:28:758]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
[2019-08-15 15:09:28:806]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: eureka-client.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2019-08-15 15:09:28:812]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client eureka-client initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-client,current list of Servers=[SH-NC-0025.zzss.local:2001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:SH-NC-0025.zzss.local:2001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@888910
[2019-08-15 15:09:29:659]  [Spring_Cloud_Eureka_Consumer_Feign,fc31036cf2045128,fc31036cf2045128,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:09:29:764]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: eureka-client.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2019-08-15 15:11:11:160]  [Spring_Cloud_Eureka_Consumer_Feign,a111dc5750a49a71,a111dc5750a49a71,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:11:11:161]  [Spring_Cloud_Eureka_Consumer_Feign,a111dc5750a49a71,a111dc5750a49a71,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:11:11:162]  [Spring_Cloud_Eureka_Consumer_Feign,a111dc5750a49a71,a111dc5750a49a71,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:11:11:163]  [Spring_Cloud_Eureka_Consumer_Feign,a111dc5750a49a71,a111dc5750a49a71,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:11:11:165]  [Spring_Cloud_Eureka_Consumer_Feign,a111dc5750a49a71,a111dc5750a49a71,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:11:11:165]  [Spring_Cloud_Eureka_Consumer_Feign,a111dc5750a49a71,a111dc5750a49a71,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:11:11:184]  [Spring_Cloud_Eureka_Consumer_Feign,a111dc5750a49a71,a111dc5750a49a71,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:11:12:856]  [Spring_Cloud_Eureka_Consumer_Feign,f95f15810e18e73b,f95f15810e18e73b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:11:12:860]  [Spring_Cloud_Eureka_Consumer_Feign,f95f15810e18e73b,f95f15810e18e73b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:11:12:861]  [Spring_Cloud_Eureka_Consumer_Feign,f95f15810e18e73b,f95f15810e18e73b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:11:12:861]  [Spring_Cloud_Eureka_Consumer_Feign,f95f15810e18e73b,f95f15810e18e73b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:11:12:862]  [Spring_Cloud_Eureka_Consumer_Feign,f95f15810e18e73b,f95f15810e18e73b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:11:12:862]  [Spring_Cloud_Eureka_Consumer_Feign,f95f15810e18e73b,f95f15810e18e73b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:11:12:885]  [Spring_Cloud_Eureka_Consumer_Feign,f95f15810e18e73b,f95f15810e18e73b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:11:13:725]  [Spring_Cloud_Eureka_Consumer_Feign,7f06dc55603e472f,7f06dc55603e472f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:11:13:725]  [Spring_Cloud_Eureka_Consumer_Feign,7f06dc55603e472f,7f06dc55603e472f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:11:13:726]  [Spring_Cloud_Eureka_Consumer_Feign,7f06dc55603e472f,7f06dc55603e472f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:11:13:727]  [Spring_Cloud_Eureka_Consumer_Feign,7f06dc55603e472f,7f06dc55603e472f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:11:13:728]  [Spring_Cloud_Eureka_Consumer_Feign,7f06dc55603e472f,7f06dc55603e472f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:11:13:730]  [Spring_Cloud_Eureka_Consumer_Feign,7f06dc55603e472f,7f06dc55603e472f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:11:13:740]  [Spring_Cloud_Eureka_Consumer_Feign,7f06dc55603e472f,7f06dc55603e472f,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:11:14:407]  [Spring_Cloud_Eureka_Consumer_Feign,4baebaac07e7be12,4baebaac07e7be12,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:11:14:408]  [Spring_Cloud_Eureka_Consumer_Feign,4baebaac07e7be12,4baebaac07e7be12,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:11:14:409]  [Spring_Cloud_Eureka_Consumer_Feign,4baebaac07e7be12,4baebaac07e7be12,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:11:14:410]  [Spring_Cloud_Eureka_Consumer_Feign,4baebaac07e7be12,4baebaac07e7be12,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:11:14:411]  [Spring_Cloud_Eureka_Consumer_Feign,4baebaac07e7be12,4baebaac07e7be12,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:11:14:412]  [Spring_Cloud_Eureka_Consumer_Feign,4baebaac07e7be12,4baebaac07e7be12,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:11:14:426]  [Spring_Cloud_Eureka_Consumer_Feign,4baebaac07e7be12,4baebaac07e7be12,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:11:14:776]  [Spring_Cloud_Eureka_Consumer_Feign,5ac4928401e995de,5ac4928401e995de,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:11:14:778]  [Spring_Cloud_Eureka_Consumer_Feign,5ac4928401e995de,5ac4928401e995de,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:11:14:779]  [Spring_Cloud_Eureka_Consumer_Feign,5ac4928401e995de,5ac4928401e995de,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:11:14:779]  [Spring_Cloud_Eureka_Consumer_Feign,5ac4928401e995de,5ac4928401e995de,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:11:14:780]  [Spring_Cloud_Eureka_Consumer_Feign,5ac4928401e995de,5ac4928401e995de,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:11:14:780]  [Spring_Cloud_Eureka_Consumer_Feign,5ac4928401e995de,5ac4928401e995de,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:11:14:791]  [Spring_Cloud_Eureka_Consumer_Feign,5ac4928401e995de,5ac4928401e995de,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:11:15:132]  [Spring_Cloud_Eureka_Consumer_Feign,72a3b6df328c6939,72a3b6df328c6939,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:11:15:133]  [Spring_Cloud_Eureka_Consumer_Feign,72a3b6df328c6939,72a3b6df328c6939,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:11:15:134]  [Spring_Cloud_Eureka_Consumer_Feign,72a3b6df328c6939,72a3b6df328c6939,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:11:15:135]  [Spring_Cloud_Eureka_Consumer_Feign,72a3b6df328c6939,72a3b6df328c6939,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:11:15:136]  [Spring_Cloud_Eureka_Consumer_Feign,72a3b6df328c6939,72a3b6df328c6939,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:11:15:137]  [Spring_Cloud_Eureka_Consumer_Feign,72a3b6df328c6939,72a3b6df328c6939,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:11:15:149]  [Spring_Cloud_Eureka_Consumer_Feign,72a3b6df328c6939,72a3b6df328c6939,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:11:15:623]  [Spring_Cloud_Eureka_Consumer_Feign,2ff96755fea98b1a,2ff96755fea98b1a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:11:15:625]  [Spring_Cloud_Eureka_Consumer_Feign,2ff96755fea98b1a,2ff96755fea98b1a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:11:15:625]  [Spring_Cloud_Eureka_Consumer_Feign,2ff96755fea98b1a,2ff96755fea98b1a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:11:15:626]  [Spring_Cloud_Eureka_Consumer_Feign,2ff96755fea98b1a,2ff96755fea98b1a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:11:15:627]  [Spring_Cloud_Eureka_Consumer_Feign,2ff96755fea98b1a,2ff96755fea98b1a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:11:15:628]  [Spring_Cloud_Eureka_Consumer_Feign,2ff96755fea98b1a,2ff96755fea98b1a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:11:15:640]  [Spring_Cloud_Eureka_Consumer_Feign,2ff96755fea98b1a,2ff96755fea98b1a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:11:17:853]  [Spring_Cloud_Eureka_Consumer_Feign,489581af86005feb,489581af86005feb,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:11:17:855]  [Spring_Cloud_Eureka_Consumer_Feign,489581af86005feb,489581af86005feb,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:11:17:855]  [Spring_Cloud_Eureka_Consumer_Feign,489581af86005feb,489581af86005feb,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:11:17:856]  [Spring_Cloud_Eureka_Consumer_Feign,489581af86005feb,489581af86005feb,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:11:17:857]  [Spring_Cloud_Eureka_Consumer_Feign,489581af86005feb,489581af86005feb,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:11:17:857]  [Spring_Cloud_Eureka_Consumer_Feign,489581af86005feb,489581af86005feb,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:11:17:870]  [Spring_Cloud_Eureka_Consumer_Feign,489581af86005feb,489581af86005feb,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:11:20:876]  [Spring_Cloud_Eureka_Consumer_Feign,c36f79ee987e0212,c36f79ee987e0212,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:11:20:878]  [Spring_Cloud_Eureka_Consumer_Feign,c36f79ee987e0212,c36f79ee987e0212,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:11:20:878]  [Spring_Cloud_Eureka_Consumer_Feign,c36f79ee987e0212,c36f79ee987e0212,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:11:20:879]  [Spring_Cloud_Eureka_Consumer_Feign,c36f79ee987e0212,c36f79ee987e0212,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:11:20:879]  [Spring_Cloud_Eureka_Consumer_Feign,c36f79ee987e0212,c36f79ee987e0212,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:11:20:880]  [Spring_Cloud_Eureka_Consumer_Feign,c36f79ee987e0212,c36f79ee987e0212,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:11:20:891]  [Spring_Cloud_Eureka_Consumer_Feign,c36f79ee987e0212,c36f79ee987e0212,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:11:21:356]  [Spring_Cloud_Eureka_Consumer_Feign,2a69d9e6fbd4238b,2a69d9e6fbd4238b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:11:21:357]  [Spring_Cloud_Eureka_Consumer_Feign,2a69d9e6fbd4238b,2a69d9e6fbd4238b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:11:21:357]  [Spring_Cloud_Eureka_Consumer_Feign,2a69d9e6fbd4238b,2a69d9e6fbd4238b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:11:21:358]  [Spring_Cloud_Eureka_Consumer_Feign,2a69d9e6fbd4238b,2a69d9e6fbd4238b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:11:21:359]  [Spring_Cloud_Eureka_Consumer_Feign,2a69d9e6fbd4238b,2a69d9e6fbd4238b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:11:21:360]  [Spring_Cloud_Eureka_Consumer_Feign,2a69d9e6fbd4238b,2a69d9e6fbd4238b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:11:21:370]  [Spring_Cloud_Eureka_Consumer_Feign,2a69d9e6fbd4238b,2a69d9e6fbd4238b,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:14:20:246]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-15 15:19:20:251]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-15 15:47:35:598]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:652) - No active profile set, falling back to default profiles: default
[2019-08-15 15:47:40:521]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing ProtocolHandler ["http-nio-3001"]
[2019-08-15 15:47:40:543]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting service [Tomcat]
[2019-08-15 15:47:40:544]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting Servlet Engine: Apache Tomcat/8.5.28
[2019-08-15 15:47:40:550]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;"C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\Program Files (x86)\Java\jdk1.8.0_131\jre\bin;";C:\Program Files\Git\cmd;C:\Program Files\PuTTY\;C:\Program ming\Anaconda3;C:\Program ming\Anaconda3\Library\mingw-w64\bin;C:\Program ming\Anaconda3\Library\usr\bin;C:\Program ming\Anaconda3\Library\bin;C:\Program ming\Anaconda3\Scripts;C:\Users\huangmingming\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\SSH Communications Security\SSH Secure Shell;C:\Users\huangmingming\AppData\Local\GitHubDesktop\bin;C:\Python27;C:\Python27\Scripts\scrapy.exe;C:\Program ming\zookeeper-3.4.12\bin;C:\Program ming\Microsoft VS Code\bin;.]
[2019-08-15 15:47:40:778]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing Spring embedded WebApplicationContext
[2019-08-15 15:47:43:715]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[2019-08-15 15:47:43:715]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-15 15:47:43:722]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[2019-08-15 15:47:43:722]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-15 15:47:48:637]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[2019-08-15 15:47:48:966]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[2019-08-15 15:47:48:967]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[2019-08-15 15:47:49:121]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[2019-08-15 15:47:49:122]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[2019-08-15 15:47:49:490]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[2019-08-15 15:47:49:626]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[2019-08-15 15:47:49:627]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[2019-08-15 15:47:49:627]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[2019-08-15 15:47:49:628]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[2019-08-15 15:47:49:628]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[2019-08-15 15:47:49:629]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[2019-08-15 15:47:49:629]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[2019-08-15 15:47:49:993]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[2019-08-15 15:47:50:002]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264) - Starting heartbeat executor: renew interval is: 30
[2019-08-15 15:47:50:012]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-15 15:47:50:020]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1565855270018 with initial instances count: 1
[2019-08-15 15:47:50:065]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1299) - Saw local status change event StatusChangeEvent [timestamp=1565855270065, current=UP, previous=STARTING]
[2019-08-15 15:47:50:070]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_EUREKA-CONSUMER-FEIGN/SH-NC-0025.zzss.local:eureka-consumer-feign:3001: registering service...
[2019-08-15 15:47:50:124]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting ProtocolHandler ["http-nio-3001"]
[2019-08-15 15:47:50:146]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_EUREKA-CONSUMER-FEIGN/SH-NC-0025.zzss.local:eureka-consumer-feign:3001 - registration status: 204
[2019-08-15 15:47:50:150]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Using a shared selector for servlet write/read
[2019-08-15 15:47:50:214]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started EurekaConsumerFeignApplication in 16.957 seconds (JVM running for 19.424)
[2019-08-15 15:47:58:195]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing Spring FrameworkServlet 'dispatcherServlet'
[2019-08-15 15:47:58:327]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:47:58:328]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:47:58:329]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:47:58:329]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:47:58:332]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:47:58:332]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:47:58:738]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: eureka-client.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2019-08-15 15:47:58:774]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:58) - Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-client
[2019-08-15 15:47:58:804]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:192) - Client: eureka-client instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-client,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2019-08-15 15:47:58:811]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature(DynamicServerListLoadBalancer.java:222) - Using serverListUpdater PollingServerListUpdater
[2019-08-15 15:47:58:848]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: eureka-client.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2019-08-15 15:47:58:855]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit(DynamicServerListLoadBalancer.java:150) - DynamicServerListLoadBalancer for client eureka-client initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-client,current list of Servers=[SH-NC-0025.zzss.local:2001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:SH-NC-0025.zzss.local:2001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@146492d
[2019-08-15 15:47:59:384]  [Spring_Cloud_Eureka_Consumer_Feign,2d1a5751d2efaac3,2d1a5751d2efaac3,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:47:59:816]  [Spring_Cloud_Eureka_Consumer_Feign,,,,] [INFO] - com.netflix.config.ChainedDynamicProperty$ChainLink.checkAndFlip(ChainedDynamicProperty.java:115) - Flipping property: eureka-client.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2019-08-15 15:48:00:078]  [Spring_Cloud_Eureka_Consumer_Feign,b20664655c590a0a,b20664655c590a0a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:48:00:078]  [Spring_Cloud_Eureka_Consumer_Feign,b20664655c590a0a,b20664655c590a0a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:48:00:079]  [Spring_Cloud_Eureka_Consumer_Feign,b20664655c590a0a,b20664655c590a0a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:48:00:080]  [Spring_Cloud_Eureka_Consumer_Feign,b20664655c590a0a,b20664655c590a0a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:48:00:081]  [Spring_Cloud_Eureka_Consumer_Feign,b20664655c590a0a,b20664655c590a0a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:48:00:082]  [Spring_Cloud_Eureka_Consumer_Feign,b20664655c590a0a,b20664655c590a0a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:48:00:099]  [Spring_Cloud_Eureka_Consumer_Feign,b20664655c590a0a,b20664655c590a0a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:48:00:850]  [Spring_Cloud_Eureka_Consumer_Feign,afa544173f9e700c,afa544173f9e700c,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:48:00:851]  [Spring_Cloud_Eureka_Consumer_Feign,afa544173f9e700c,afa544173f9e700c,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:48:00:851]  [Spring_Cloud_Eureka_Consumer_Feign,afa544173f9e700c,afa544173f9e700c,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:48:00:852]  [Spring_Cloud_Eureka_Consumer_Feign,afa544173f9e700c,afa544173f9e700c,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:48:00:852]  [Spring_Cloud_Eureka_Consumer_Feign,afa544173f9e700c,afa544173f9e700c,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:48:00:853]  [Spring_Cloud_Eureka_Consumer_Feign,afa544173f9e700c,afa544173f9e700c,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:48:00:891]  [Spring_Cloud_Eureka_Consumer_Feign,afa544173f9e700c,afa544173f9e700c,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:48:01:657]  [Spring_Cloud_Eureka_Consumer_Feign,80674facc400d2f4,80674facc400d2f4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:48:01:658]  [Spring_Cloud_Eureka_Consumer_Feign,80674facc400d2f4,80674facc400d2f4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:48:01:659]  [Spring_Cloud_Eureka_Consumer_Feign,80674facc400d2f4,80674facc400d2f4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:48:01:659]  [Spring_Cloud_Eureka_Consumer_Feign,80674facc400d2f4,80674facc400d2f4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:48:01:660]  [Spring_Cloud_Eureka_Consumer_Feign,80674facc400d2f4,80674facc400d2f4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:48:01:661]  [Spring_Cloud_Eureka_Consumer_Feign,80674facc400d2f4,80674facc400d2f4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:48:01:675]  [Spring_Cloud_Eureka_Consumer_Feign,80674facc400d2f4,80674facc400d2f4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:48:02:596]  [Spring_Cloud_Eureka_Consumer_Feign,f243f7a7fe8cb957,f243f7a7fe8cb957,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:48:02:597]  [Spring_Cloud_Eureka_Consumer_Feign,f243f7a7fe8cb957,f243f7a7fe8cb957,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:48:02:597]  [Spring_Cloud_Eureka_Consumer_Feign,f243f7a7fe8cb957,f243f7a7fe8cb957,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:48:02:598]  [Spring_Cloud_Eureka_Consumer_Feign,f243f7a7fe8cb957,f243f7a7fe8cb957,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:48:02:599]  [Spring_Cloud_Eureka_Consumer_Feign,f243f7a7fe8cb957,f243f7a7fe8cb957,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:48:02:600]  [Spring_Cloud_Eureka_Consumer_Feign,f243f7a7fe8cb957,f243f7a7fe8cb957,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:48:02:615]  [Spring_Cloud_Eureka_Consumer_Feign,f243f7a7fe8cb957,f243f7a7fe8cb957,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:48:14:547]  [Spring_Cloud_Eureka_Consumer_Feign,05c6955c234619bc,05c6955c234619bc,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:48:14:547]  [Spring_Cloud_Eureka_Consumer_Feign,05c6955c234619bc,05c6955c234619bc,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:48:14:548]  [Spring_Cloud_Eureka_Consumer_Feign,05c6955c234619bc,05c6955c234619bc,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:48:14:549]  [Spring_Cloud_Eureka_Consumer_Feign,05c6955c234619bc,05c6955c234619bc,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:48:14:550]  [Spring_Cloud_Eureka_Consumer_Feign,05c6955c234619bc,05c6955c234619bc,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:48:14:550]  [Spring_Cloud_Eureka_Consumer_Feign,05c6955c234619bc,05c6955c234619bc,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:48:14:568]  [Spring_Cloud_Eureka_Consumer_Feign,05c6955c234619bc,05c6955c234619bc,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:48:23:374]  [Spring_Cloud_Eureka_Consumer_Feign,95d8e25b6e832c82,95d8e25b6e832c82,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:48:23:375]  [Spring_Cloud_Eureka_Consumer_Feign,95d8e25b6e832c82,95d8e25b6e832c82,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:48:23:376]  [Spring_Cloud_Eureka_Consumer_Feign,95d8e25b6e832c82,95d8e25b6e832c82,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:48:23:377]  [Spring_Cloud_Eureka_Consumer_Feign,95d8e25b6e832c82,95d8e25b6e832c82,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:48:23:377]  [Spring_Cloud_Eureka_Consumer_Feign,95d8e25b6e832c82,95d8e25b6e832c82,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:48:23:378]  [Spring_Cloud_Eureka_Consumer_Feign,95d8e25b6e832c82,95d8e25b6e832c82,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:48:23:391]  [Spring_Cloud_Eureka_Consumer_Feign,95d8e25b6e832c82,95d8e25b6e832c82,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:48:54:627]  [Spring_Cloud_Eureka_Consumer_Feign,ee2c0d9650b9e581,ee2c0d9650b9e581,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:48:54:628]  [Spring_Cloud_Eureka_Consumer_Feign,ee2c0d9650b9e581,ee2c0d9650b9e581,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:48:54:629]  [Spring_Cloud_Eureka_Consumer_Feign,ee2c0d9650b9e581,ee2c0d9650b9e581,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:48:54:630]  [Spring_Cloud_Eureka_Consumer_Feign,ee2c0d9650b9e581,ee2c0d9650b9e581,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:48:54:630]  [Spring_Cloud_Eureka_Consumer_Feign,ee2c0d9650b9e581,ee2c0d9650b9e581,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:48:54:631]  [Spring_Cloud_Eureka_Consumer_Feign,ee2c0d9650b9e581,ee2c0d9650b9e581,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:48:54:647]  [Spring_Cloud_Eureka_Consumer_Feign,ee2c0d9650b9e581,ee2c0d9650b9e581,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:48:55:393]  [Spring_Cloud_Eureka_Consumer_Feign,ca3b0efb88d083c7,ca3b0efb88d083c7,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:48:55:394]  [Spring_Cloud_Eureka_Consumer_Feign,ca3b0efb88d083c7,ca3b0efb88d083c7,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:48:55:394]  [Spring_Cloud_Eureka_Consumer_Feign,ca3b0efb88d083c7,ca3b0efb88d083c7,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:48:55:394]  [Spring_Cloud_Eureka_Consumer_Feign,ca3b0efb88d083c7,ca3b0efb88d083c7,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:48:55:395]  [Spring_Cloud_Eureka_Consumer_Feign,ca3b0efb88d083c7,ca3b0efb88d083c7,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:48:55:395]  [Spring_Cloud_Eureka_Consumer_Feign,ca3b0efb88d083c7,ca3b0efb88d083c7,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:48:55:406]  [Spring_Cloud_Eureka_Consumer_Feign,ca3b0efb88d083c7,ca3b0efb88d083c7,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:48:56:355]  [Spring_Cloud_Eureka_Consumer_Feign,240cbfab5e07373d,240cbfab5e07373d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:48:56:355]  [Spring_Cloud_Eureka_Consumer_Feign,240cbfab5e07373d,240cbfab5e07373d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:48:56:356]  [Spring_Cloud_Eureka_Consumer_Feign,240cbfab5e07373d,240cbfab5e07373d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:48:56:356]  [Spring_Cloud_Eureka_Consumer_Feign,240cbfab5e07373d,240cbfab5e07373d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:48:56:356]  [Spring_Cloud_Eureka_Consumer_Feign,240cbfab5e07373d,240cbfab5e07373d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:48:56:357]  [Spring_Cloud_Eureka_Consumer_Feign,240cbfab5e07373d,240cbfab5e07373d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:48:56:372]  [Spring_Cloud_Eureka_Consumer_Feign,240cbfab5e07373d,240cbfab5e07373d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:48:57:714]  [Spring_Cloud_Eureka_Consumer_Feign,d5a346dd377963fa,d5a346dd377963fa,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:48:57:714]  [Spring_Cloud_Eureka_Consumer_Feign,d5a346dd377963fa,d5a346dd377963fa,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:48:57:715]  [Spring_Cloud_Eureka_Consumer_Feign,d5a346dd377963fa,d5a346dd377963fa,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:48:57:716]  [Spring_Cloud_Eureka_Consumer_Feign,d5a346dd377963fa,d5a346dd377963fa,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:48:57:717]  [Spring_Cloud_Eureka_Consumer_Feign,d5a346dd377963fa,d5a346dd377963fa,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:48:57:717]  [Spring_Cloud_Eureka_Consumer_Feign,d5a346dd377963fa,d5a346dd377963fa,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:48:57:728]  [Spring_Cloud_Eureka_Consumer_Feign,d5a346dd377963fa,d5a346dd377963fa,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:48:58:499]  [Spring_Cloud_Eureka_Consumer_Feign,02b2072e3ed108ef,02b2072e3ed108ef,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:48:58:500]  [Spring_Cloud_Eureka_Consumer_Feign,02b2072e3ed108ef,02b2072e3ed108ef,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:48:58:500]  [Spring_Cloud_Eureka_Consumer_Feign,02b2072e3ed108ef,02b2072e3ed108ef,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:48:58:501]  [Spring_Cloud_Eureka_Consumer_Feign,02b2072e3ed108ef,02b2072e3ed108ef,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:48:58:501]  [Spring_Cloud_Eureka_Consumer_Feign,02b2072e3ed108ef,02b2072e3ed108ef,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:48:58:502]  [Spring_Cloud_Eureka_Consumer_Feign,02b2072e3ed108ef,02b2072e3ed108ef,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:48:58:513]  [Spring_Cloud_Eureka_Consumer_Feign,02b2072e3ed108ef,02b2072e3ed108ef,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:48:59:470]  [Spring_Cloud_Eureka_Consumer_Feign,6388ff6503fa05ec,6388ff6503fa05ec,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:48:59:471]  [Spring_Cloud_Eureka_Consumer_Feign,6388ff6503fa05ec,6388ff6503fa05ec,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:48:59:472]  [Spring_Cloud_Eureka_Consumer_Feign,6388ff6503fa05ec,6388ff6503fa05ec,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:48:59:472]  [Spring_Cloud_Eureka_Consumer_Feign,6388ff6503fa05ec,6388ff6503fa05ec,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:48:59:474]  [Spring_Cloud_Eureka_Consumer_Feign,6388ff6503fa05ec,6388ff6503fa05ec,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:48:59:474]  [Spring_Cloud_Eureka_Consumer_Feign,6388ff6503fa05ec,6388ff6503fa05ec,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:48:59:483]  [Spring_Cloud_Eureka_Consumer_Feign,6388ff6503fa05ec,6388ff6503fa05ec,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:49:00:278]  [Spring_Cloud_Eureka_Consumer_Feign,551a57a9858345fd,551a57a9858345fd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:49:00:279]  [Spring_Cloud_Eureka_Consumer_Feign,551a57a9858345fd,551a57a9858345fd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:49:00:279]  [Spring_Cloud_Eureka_Consumer_Feign,551a57a9858345fd,551a57a9858345fd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:49:00:280]  [Spring_Cloud_Eureka_Consumer_Feign,551a57a9858345fd,551a57a9858345fd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:49:00:281]  [Spring_Cloud_Eureka_Consumer_Feign,551a57a9858345fd,551a57a9858345fd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:49:00:282]  [Spring_Cloud_Eureka_Consumer_Feign,551a57a9858345fd,551a57a9858345fd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:49:00:296]  [Spring_Cloud_Eureka_Consumer_Feign,551a57a9858345fd,551a57a9858345fd,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:49:01:440]  [Spring_Cloud_Eureka_Consumer_Feign,e155ff0714e0eaa4,e155ff0714e0eaa4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:49:01:440]  [Spring_Cloud_Eureka_Consumer_Feign,e155ff0714e0eaa4,e155ff0714e0eaa4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:49:01:441]  [Spring_Cloud_Eureka_Consumer_Feign,e155ff0714e0eaa4,e155ff0714e0eaa4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:49:01:441]  [Spring_Cloud_Eureka_Consumer_Feign,e155ff0714e0eaa4,e155ff0714e0eaa4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:49:01:442]  [Spring_Cloud_Eureka_Consumer_Feign,e155ff0714e0eaa4,e155ff0714e0eaa4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:49:01:443]  [Spring_Cloud_Eureka_Consumer_Feign,e155ff0714e0eaa4,e155ff0714e0eaa4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:49:01:458]  [Spring_Cloud_Eureka_Consumer_Feign,e155ff0714e0eaa4,e155ff0714e0eaa4,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:49:02:295]  [Spring_Cloud_Eureka_Consumer_Feign,7712684bdaa5ca0d,7712684bdaa5ca0d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:49:02:296]  [Spring_Cloud_Eureka_Consumer_Feign,7712684bdaa5ca0d,7712684bdaa5ca0d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:49:02:297]  [Spring_Cloud_Eureka_Consumer_Feign,7712684bdaa5ca0d,7712684bdaa5ca0d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:49:02:297]  [Spring_Cloud_Eureka_Consumer_Feign,7712684bdaa5ca0d,7712684bdaa5ca0d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:49:02:298]  [Spring_Cloud_Eureka_Consumer_Feign,7712684bdaa5ca0d,7712684bdaa5ca0d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:49:02:298]  [Spring_Cloud_Eureka_Consumer_Feign,7712684bdaa5ca0d,7712684bdaa5ca0d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:49:02:312]  [Spring_Cloud_Eureka_Consumer_Feign,7712684bdaa5ca0d,7712684bdaa5ca0d,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:49:03:047]  [Spring_Cloud_Eureka_Consumer_Feign,9c34dfded00c706a,9c34dfded00c706a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:49:03:048]  [Spring_Cloud_Eureka_Consumer_Feign,9c34dfded00c706a,9c34dfded00c706a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:49:03:048]  [Spring_Cloud_Eureka_Consumer_Feign,9c34dfded00c706a,9c34dfded00c706a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:49:03:049]  [Spring_Cloud_Eureka_Consumer_Feign,9c34dfded00c706a,9c34dfded00c706a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:49:03:050]  [Spring_Cloud_Eureka_Consumer_Feign,9c34dfded00c706a,9c34dfded00c706a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:49:03:051]  [Spring_Cloud_Eureka_Consumer_Feign,9c34dfded00c706a,9c34dfded00c706a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:49:03:063]  [Spring_Cloud_Eureka_Consumer_Feign,9c34dfded00c706a,9c34dfded00c706a,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:49:03:716]  [Spring_Cloud_Eureka_Consumer_Feign,a56a8624dc00ecc2,a56a8624dc00ecc2,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:49:03:718]  [Spring_Cloud_Eureka_Consumer_Feign,a56a8624dc00ecc2,a56a8624dc00ecc2,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:49:03:719]  [Spring_Cloud_Eureka_Consumer_Feign,a56a8624dc00ecc2,a56a8624dc00ecc2,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:49:03:719]  [Spring_Cloud_Eureka_Consumer_Feign,a56a8624dc00ecc2,a56a8624dc00ecc2,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:49:03:720]  [Spring_Cloud_Eureka_Consumer_Feign,a56a8624dc00ecc2,a56a8624dc00ecc2,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:49:03:721]  [Spring_Cloud_Eureka_Consumer_Feign,a56a8624dc00ecc2,a56a8624dc00ecc2,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:49:03:733]  [Spring_Cloud_Eureka_Consumer_Feign,a56a8624dc00ecc2,a56a8624dc00ecc2,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
[2019-08-15 15:49:04:406]  [Spring_Cloud_Eureka_Consumer_Feign,a707fc4ca5431a27,a707fc4ca5431a27,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:26) - 执行 consumer_Hello 开始
[2019-08-15 15:49:04:407]  [Spring_Cloud_Eureka_Consumer_Feign,a707fc4ca5431a27,a707fc4ca5431a27,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:32) - URL : http://peer1:3001/consumer_Hello
[2019-08-15 15:49:04:408]  [Spring_Cloud_Eureka_Consumer_Feign,a707fc4ca5431a27,a707fc4ca5431a27,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:33) - HTTP_METHOD : GET
[2019-08-15 15:49:04:409]  [Spring_Cloud_Eureka_Consumer_Feign,a707fc4ca5431a27,a707fc4ca5431a27,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:34) - IP : 127.0.0.1
[2019-08-15 15:49:04:409]  [Spring_Cloud_Eureka_Consumer_Feign,a707fc4ca5431a27,a707fc4ca5431a27,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:35) - CLASS_METHOD : com.myylm.Controller.HelloController.helloSay
[2019-08-15 15:49:04:410]  [Spring_Cloud_Eureka_Consumer_Feign,a707fc4ca5431a27,a707fc4ca5431a27,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addBeforeLogger(LoggerAdvice.java:36) - ARGS : Null
[2019-08-15 15:49:04:419]  [Spring_Cloud_Eureka_Consumer_Feign,a707fc4ca5431a27,a707fc4ca5431a27,,true] [INFO] - com.myylm.commons.aop.LoggerAdvice.addAfterReturningLogger(LoggerAdvice.java:42) - 执行 consumer_Hello 结束
