spring.application.name=api-gateway
server.port=5001

zuul.routes.api.path = /api/**
zuul.routes.api.service-id = eureka-client

zuul.routes.feign_api.path = /feign_api/**
zuul.routes.feign_api.service-id = eureka-consumer-feign


zuul.routes.hystrix_api.path = /feign_hystrix_api/**
zuul.routes.hystrix_api.service-id = eureka-consumer-hystrix-feign

zuul.host.connect-timeout-millis=60000
zuul.host.socket-timeout-millis=60000
zuul.host.max-total-connections=500

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=?60000
hystrix.command.default.execution.timeout.enabled=true
#请求连接的超时时间
ribbon.ConnectTimeout=50000
#请求处理的超时时间
ribbon.ReadTimeout=50000
#对当前实例的重试次数(每台服务器最多重试次数，但是首次调用不包括在内)
ribbon.maxAutoRetries=1
#切换实例的重试次数(最多重试多少台服务器)
ribbon.MaxAutoRetriesNextServer=2

#表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance
#默认为90秒
#如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
#如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
#该值至少应该大于leaseRenewalIntervalInSeconds
eureka.instance.lease-expiration-duration-in-seconds=30
#表示eureka client发送心跳给server端的频率。如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance
eureka.instance.lease-renewal-interval-in-seconds=10
#快速发现服务，默认为30秒
eureka.client.registry-fetch-interval-seconds=3  



eureka.client.serviceUrl.defaultZone=http://peer1:1111/eureka/